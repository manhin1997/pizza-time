{"version":3,"sources":["variables/stateInit.jsx","components/Card.jsx","variables/pizzaList.jsx","components/SelectPopup.jsx","components/Basket.jsx","App.jsx","index.js"],"names":["PopUpSelection","selectedPizza","selectedtoppings","selectedsizes","BasketSelection","useStyles","makeStyles","root","display","flexDirection","justifyContent","maxWidth","props","media","height","button","width","PizzaCard","card","setpopupEnabled","setPopup","classes","Card","className","CardMedia","image","process","img","title","CardContent","style","flexGrow","Typography","gutterBottom","variant","color","component","price","CardActions","Button","onClick","event","parseInt","currentTarget","id","key","pizzaList","DialogTitle","children","onClose","other","position","IconButton","aria-label","right","top","SelectPopup","OptionList","popup","setBasket","basket","popupEnabled","handleToppingsChange","target","checked","name","currentToppings","filter","x","handleSizeChange","pizza","find","Dialog","fullWidth","open","FormControl","margin","FormLabel","FormGroup","marginBottom","gridTemplateColumns","toppings","map","topping","FormControlLabel","value","label","control","Checkbox","includes","onChange","RadioGroup","sizes","size","Radio","DialogActions","Basket","basketList","setBasketList","Paper","elevation","length","List","index","BasketItem","border","float","fontWeight","pizzaSum","getPizzaSum","disabled","ListItem","marginRight","newList","ListItemText","primary","secondary","marginLeft","App","useState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2RACaA,EAAiB,CAC1BC,cAAe,EACfC,iBAAkB,GAClBC,cAAe,IAGNC,EAAkB,G,OCGzBC,EAAYC,YAAW,CACzBC,KAAM,CACFC,QAAS,OACTC,cAAe,SACfC,eAAgB,gBAChBC,SAAU,SAAAC,GAAK,OAAIA,EAAMD,WAE7BE,MAAO,CACHC,OAAQ,KAEZC,OAAQ,CACJC,MAAO,SAAAJ,GAAK,OAAIA,EAAMD,SAAW,OAoC1BM,MA/Bf,SAAmBL,GAAO,IACfM,EAAmCN,EAAnCM,KAAMC,EAA6BP,EAA7BO,gBAAiBC,EAAYR,EAAZQ,SASxBC,EAAUhB,EAAU,CAACM,SAAW,MACtC,OACI,eAACW,EAAA,EAAD,CAAMC,UAAYF,EAAQd,KAA1B,UACI,cAACiB,EAAA,EAAD,CAAWD,UAAWF,EAAQR,MAAOY,MAAK,UAAKC,yBAAL,sBAAyCR,EAAKS,IAA9C,QAAyDC,MAAOV,EAAKU,QAC/G,eAACC,EAAA,EAAD,CAAaC,MAAO,CAACC,SAAU,KAA/B,UACI,cAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAjC,SACKhB,EAAKU,QAEV,cAACI,EAAA,EAAD,CAAYE,QAAQ,KAAKC,MAAM,cAAcC,UAAU,IAAvD,oBACSlB,EAAKmB,YAGlB,cAACC,EAAA,EAAD,CAAaR,MAAO,CAACtB,QAAS,OAAQE,eAAgB,UAAtD,SACI,cAAC6B,EAAA,EAAD,CAAQL,QAAQ,YAAYC,MAAM,UAAUZ,UAAWF,EAAQN,OAAQyB,QArB/D,SAACC,GACjBrB,EAAS,2BACFpB,GADC,IAEJC,cAAeyC,SAASD,EAAME,cAAcC,GAAI,OAEpDzB,GAAgB,IAgBqFyB,GAAI1B,EAAK2B,IAAtG,0B,kICjDHC,EAAY,CACrB,CACED,IAAM,EACNlB,IAAM,KACNC,MAAO,gBACPS,MAAO,KAET,CACEQ,IAAM,EACNlB,IAAM,KACNC,MAAO,+BACPS,MAAO,IAET,CACEQ,IAAM,EACNlB,IAAM,KACNC,MAAO,gBACPS,MAAO,KAET,CACEQ,IAAM,EACNlB,IAAM,KACNC,MAAO,+BACPS,MAAO,KClBPU,EAAe,SAACnC,GAAW,IACrBoC,EAAgCpC,EAAhCoC,SAAUC,EAAsBrC,EAAtBqC,QAAYC,EADF,YACYtC,EADZ,wBAE5B,OACE,eAAC,IAAD,2BAAqBsC,GAArB,IAA4BpB,MAAO,CAACqB,SAAU,YAA9C,UACGH,EACD,cAACI,EAAA,EAAD,CAAYC,aAAW,QAAQb,QAASS,EAASnB,MAAO,CAACqB,SAAU,WAAYG,MAAO,OAAQC,IAAK,QAAnG,SACA,cAAC,IAAD,WA2EOC,MArEf,SAAqB5C,GAAO,IACjB6C,EAAiF7C,EAAjF6C,WAAYC,EAAqE9C,EAArE8C,MAAOtC,EAA8DR,EAA9DQ,SAAUuC,EAAoD/C,EAApD+C,UAAWC,EAAyChD,EAAzCgD,OAAQC,EAAiCjD,EAAjCiD,aAAc1C,EAAmBP,EAAnBO,gBAC/D2C,EAAuB,SAACrB,GAC1B,GAAGA,EAAMsB,OAAOC,QACZ5C,EAAS,2BACFsC,GADC,IAEJxD,iBAAiB,CAAEuC,EAAMsB,OAAOE,MAAhB,mBAAyBP,EAAMxD,0BAGnD,CACA,IAAIgE,EAAkBR,EAAMxD,iBAAiBiE,QAAO,SAAAC,GAAC,OAAIA,IAAM3B,EAAMsB,OAAOE,QAC5E7C,EAAS,2BACFsC,GADC,IAEJxD,iBAAkBgE,OAIxBG,EAAmB,SAAC5B,GACtBrB,EAAS,2BACFsC,GADC,IAEJvD,cAAesC,EAAMsB,OAAOE,SAe9BK,EAAQxB,EAAUyB,MAAK,SAAAD,GAAK,OAAIA,EAAMzB,MAAQa,EAAMzD,iBAI1D,OACI,eAACuE,EAAA,EAAD,CAAQC,WAAW,EAAMC,KAAMb,EAA/B,UACI,cAAC,EAAD,CAAajB,GAAG,0BAA0BK,QAV/B,SAACR,GAChBtB,GAAgB,IASZ,SACKmD,GAASA,EAAM1C,QAEpB,eAAC+C,EAAA,EAAD,CAAa7C,MAAS,CAAC8C,OAAQ,QAA/B,UACI,cAACC,EAAA,EAAD,CAAWzC,UAAU,SAArB,sBACA,cAAC0C,EAAA,EAAD,CAAWzB,aAAW,WAAWY,KAAK,WACtCnC,MAAO,CAACiD,aAAe,OAAQvE,QAAS,OAAQwE,oBAAqB,kBADrE,SAGIvB,EAAWwB,SAASC,KAAI,SAACC,GAAD,OAAa,cAACC,EAAA,EAAD,CAAgCC,MAAOF,EAASG,MAAOH,EAC5FI,QAAS,cAACC,EAAA,EAAD,CAAUxB,QAASN,EAAMxD,iBAAiBuF,SAASN,GAAUO,SAAU5B,EAAsBG,KAAMkB,KADhDA,QAIhE,cAACN,EAAA,EAAD,CAAWzC,UAAU,SAArB,mBACA,cAACuD,EAAA,EAAD,CAAYtC,aAAW,QAAQY,KAAK,QAAQnC,MAAO,CAACiD,aAAe,QAAnE,SAEItB,EAAWmC,MAAMV,KAAI,SAACW,GAAD,OAAU,cAACT,EAAA,EAAD,CAA6BC,MAAOQ,EAAMP,MAAOO,EAChFN,QAAS,cAACO,EAAA,EAAD,CAAO9B,QAASN,EAAMvD,gBAAkB0F,EAAMH,SAAUrB,EAAkBJ,KAAM4B,KADnCA,WAK9D,cAACE,EAAA,EAAD,UACI,cAACxD,EAAA,EAAD,CAAQL,QAAQ,YAAYC,MAAM,UAAUK,QAtC9B,SAACC,GACvBkB,EAAU,GAAD,mBACDC,GADC,CACOF,KAEhBvC,GAAgB,IAkCR,0B,yCCCD6E,MA1Ef,SAAgBpF,GAAO,IACZqF,EAA6BrF,EAA7BqF,WAAYC,EAAiBtF,EAAjBsF,cAWnB,OACI,cAACC,EAAA,EAAD,CAAOC,UAAW,EAAlB,SACI,sBAAK7E,UAAU,QAAf,UACI,wCACA,uBAG0B,IAAtB0E,EAAWI,QACX,qBAAK9E,UAAU,WAAf,qCAKqB,IAAtB0E,EAAWI,QACX,cAACC,EAAA,EAAD,UACKL,EAAWf,KAAI,SAACtB,EAAQ2C,GAAT,OAAmB,cAACC,EAAD,CAAwB5C,OAAQA,GAAf2C,QAI3D,oBAAIzE,MAAO,CAAC2E,OAAQ,aAAc1B,aAAc,UAChD,sBAAKxD,UAAU,MAAf,UACI,sBAAMO,MAAO,CAAC4E,MAAO,OAAQC,WAAY,QAAzC,4BACA,sBAAM7E,MAAO,CAAC4E,MAAO,QAASC,WAAY,QAA1C,oBA/BhB,WAEI,IADA,IAAIC,EAAW,EADG,WAETL,GACL,IAAMjC,EAAQxB,EAAUyB,MAAK,SAACH,GAAD,OAAOA,EAAEvB,MAAQoD,EAAWM,GAAOtG,iBAChE2G,GAAYtC,EAAMjC,OAFbkE,EAAQ,EAAGA,EAAQN,EAAWI,OAAQE,IAAU,EAAhDA,GAIT,OAAOK,EAyB6DC,SAE5D,qBAAKtF,UAAU,aAAf,SACI,cAACgB,EAAA,EAAD,CAAQL,QAAQ,YAAYC,MAAM,YAAYL,MAAO,CAACd,MAAO,QAAS8F,SAAkC,IAAtBb,EAAWI,OAA7F,6BAMhB,SAASG,EAAW5F,GAAO,IAEhBgD,EAAUhD,EAAVgD,OACDU,EAAQxB,EAAUyB,MAAK,SAACH,GAAD,OAAOA,EAAEvB,MAAQe,EAAO3D,iBACrD,OACI,eAAC8G,EAAA,EAAD,WACI,cAAC3D,EAAA,EAAD,CAAYC,aAAW,QAAQvB,MAAO,CAACkF,YAAa,QAASnB,KAAK,QAAQrD,QAelF,WACI,IAAMyE,EAAUhB,EAAW9B,QAAO,SAAAC,GAAC,OAAIA,IAAMR,KAC7CsC,EAAce,IAjB2FhD,KAAMrD,EAAMW,UAAjH,SACI,cAAC,IAAD,MAEJ,cAAC2F,EAAA,EAAD,CAAcpF,MAAO,CAACkF,YAAa,QAASG,QAAS7C,EAAM1C,MAAOwF,UAC9D,eAAC,WAAD,oBACWxD,EAAOzD,cAAc,uBAC3ByD,EAAO1D,iBAAiBmG,OAAS,GAClC,8CAAgB,uBACfzC,EAAO1D,iBAAiBgF,KAAI,SAACC,GAAD,OAAa,qBAAKrD,MAAO,CAACuF,WAAY,SAAzB,SAAoClC,eAGtF,yCAAUb,EAAMjC,cCxD1BoB,EAAa,CACjBwB,SAAU,CAAC,mBAAoB,mBAAoB,mBAClD,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAChF,oBACDW,MAAO,CAAC,gBAAiB,gBAAiB,kBAiC7B0B,MA5Bf,WAAe,MAE2BC,oBAAS,GAFpC,mBAEN1D,EAFM,KAEQ1C,EAFR,OAIaoG,mBAASvH,GAJtB,mBAIN0D,EAJM,KAICtC,EAJD,OAMuBmG,mBAASnH,GANhC,mBAMN6F,EANM,KAMMC,EANN,KAQb,OACE,sBAAK3E,UAAU,MAAf,UACE,cAAC,EAAD,CAAakC,WAAcA,EAC3BC,MAASA,EAAOtC,SAAYA,EAAUuC,UAAauC,EAAetC,OAAUqC,EAC5EpC,aAAgBA,EAAc1C,gBAAiBA,IAC/C,sBAAKI,UAAY,WAAjB,UACE,qBAAKA,UAAY,WAAjB,SAEIuB,EAAUoC,KAAI,SAAChE,GAAD,OAAU,cAAC,EAAD,CAA0BA,KAAOA,EAAMC,gBAAiBA,EAChFuC,MAASA,EAAOtC,SAAYA,GADYF,EAAK2B,UAIjD,qBAAKtB,UAAY,SAAjB,SACE,cAAC,EAAD,CAAQ2E,cAAiBA,EAAeD,WAAcA,aCpChEuB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d43ef414.chunk.js","sourcesContent":["//Init state of selecyion\r\nexport const PopUpSelection = {\r\n    selectedPizza: 1,\r\n    selectedtoppings: [],\r\n    selectedsizes: \"\",\r\n}\r\n\r\nexport const BasketSelection = []","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {PopUpSelection} from '../variables/stateInit'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"space-between\",\r\n        maxWidth: props => props.maxWidth,\r\n    },\r\n    media: {\r\n        height: 220,\r\n    },\r\n    button: {\r\n        width: props => props.maxWidth - 50,\r\n    }\r\n})\r\n\r\n\r\nfunction PizzaCard(props){\r\n    const {card, setpopupEnabled, setPopup} = props;\r\n    const handlePopUp = (event) => {\r\n        setPopup({\r\n            ...PopUpSelection,\r\n            selectedPizza: parseInt(event.currentTarget.id, 10)\r\n        });\r\n        setpopupEnabled(true);\r\n        //Reset all state from form\r\n    }\r\n    const classes = useStyles({maxWidth : 345});\r\n    return(\r\n        <Card className= {classes.root}>\r\n            <CardMedia className={classes.media} image={`${process.env.PUBLIC_URL}/img/pizza/${card.img}.png`} title={card.title}/>\r\n            <CardContent style={{flexGrow: \"1\"}}>\r\n                <Typography gutterBottom variant=\"h5\">\r\n                    {card.title}\r\n                </Typography>\r\n                <Typography variant=\"h6\" color=\"textPrimary\" component=\"p\">\r\n                    {`$${card.price}`}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions style={{display: \"flex\", justifyContent: \"center\"}}>\r\n                <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={handlePopUp} id={card.key}>\r\n                    Choose\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default PizzaCard;","export const pizzaList = [\r\n    {\r\n      key : 1,\r\n      img : \"01\",\r\n      title: \"Super Supreme\",\r\n      price: 158\r\n    },\r\n    {\r\n      key : 2,\r\n      img : \"02\",\r\n      title: \"Super Supreme (Tomato Sauce)\",\r\n      price: 99\r\n    },\r\n    {\r\n      key : 3,\r\n      img : \"01\",\r\n      title: \"Super Supreme\",\r\n      price: 158\r\n    },\r\n    {\r\n      key : 4,\r\n      img : \"02\",\r\n      title: \"Super Supreme (Tomato Sauce)\",\r\n      price: 99\r\n    }\r\n]\r\n","import MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport {Button, Checkbox, Dialog, DialogActions, FormControl, FormControlLabel, FormGroup, FormLabel, IconButton, Radio, RadioGroup}  from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { pizzaList } from '../variables/pizzaList';\r\n\r\nconst DialogTitle = ((props) => {\r\n    const { children, onClose, ...other } = props;\r\n    return (\r\n      <MuiDialogTitle  {...other} style={{position: \"relative\"}}>\r\n        {children}\r\n        <IconButton aria-label=\"close\" onClick={onClose} style={{position: \"absolute\", right: \"10px\", top: \"10px\"}}>\r\n        <CloseIcon/>\r\n        </IconButton>\r\n      </MuiDialogTitle>\r\n    );\r\n});\r\n\r\nfunction SelectPopup(props){\r\n    const {OptionList, popup, setPopup, setBasket, basket, popupEnabled, setpopupEnabled} = props;\r\n    const handleToppingsChange = (event) => {\r\n        if(event.target.checked){\r\n            setPopup({\r\n                ...popup,\r\n                selectedtoppings: [event.target.name, ...popup.selectedtoppings]\r\n            });\r\n        }\r\n        else{\r\n            let currentToppings = popup.selectedtoppings.filter(x => x !== event.target.name);\r\n            setPopup({\r\n                ...popup,\r\n                selectedtoppings: currentToppings\r\n            });\r\n        }\r\n    }\r\n    const handleSizeChange = (event) => {\r\n        setPopup({\r\n            ...popup,\r\n            selectedsizes: event.target.name\r\n        });\r\n    }\r\n\r\n    const submitPopupResult = (event) => {\r\n        setBasket(\r\n            [...basket, popup]\r\n        );\r\n        setpopupEnabled(false);\r\n    }\r\n\r\n    const closePopUp = (event) => {\r\n        setpopupEnabled(false);\r\n    }\r\n\r\n    const pizza = pizzaList.find(pizza => pizza.key === popup.selectedPizza);\r\n\r\n\r\n    \r\n    return(\r\n        <Dialog fullWidth={true} open={popupEnabled}>\r\n            <DialogTitle id=\"customized-dialog-title\" onClose={closePopUp}>\r\n                {pizza && pizza.title}\r\n            </DialogTitle>\r\n            <FormControl style = {{margin: \"15px\"}}>\r\n                <FormLabel component=\"legend\">Toppings</FormLabel>\r\n                <FormGroup aria-label=\"toppings\" name=\"toppings\" \r\n                style={{marginBottom : \"15px\", display: \"grid\", gridTemplateColumns: \"auto auto auto\"}}>\r\n                {\r\n                    OptionList.toppings.map((topping) => <FormControlLabel key={topping} value={topping} label={topping} \r\n                    control={<Checkbox checked={popup.selectedtoppings.includes(topping)} onChange={handleToppingsChange} name={topping}/>}/>)\r\n                }\r\n                </FormGroup>\r\n                <FormLabel component=\"legend\">Sizes</FormLabel>\r\n                <RadioGroup aria-label=\"sizes\" name=\"sizes\" style={{marginBottom : \"15px\"}}>\r\n                {\r\n                    OptionList.sizes.map((size) => <FormControlLabel key={size} value={size} label={size} \r\n                    control={<Radio checked={popup.selectedsizes === size} onChange={handleSizeChange} name={size}/>}/>)\r\n                }\r\n                </RadioGroup>\r\n            </FormControl>\r\n            <DialogActions>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={submitPopupResult}>Submit</Button>\r\n            </DialogActions>\r\n\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default SelectPopup;","import { Button, IconButton, List, ListItem, ListItemText, Paper, Typography } from \"@material-ui/core\";\r\nimport \"./Basket.scss\"\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Fragment } from \"react\";\r\nimport {pizzaList} from \"../variables/pizzaList\";\r\n\r\nfunction Basket(props){\r\n    const {basketList, setBasketList} = props;\r\n\r\n    function getPizzaSum(){\r\n        let pizzaSum = 0;\r\n        for (let index = 0; index < basketList.length; index++) {\r\n            const pizza = pizzaList.find((x) => x.key === basketList[index].selectedPizza);\r\n            pizzaSum += pizza.price\r\n        }\r\n        return pizzaSum;\r\n    }\r\n\r\n    return(\r\n        <Paper elevation={2}>\r\n            <div className=\"paper\">\r\n                <h2>Basket</h2>\r\n                <hr/>\r\n                {\r\n                    //Display only if basket is empty\r\n                    basketList.length === 0 && \r\n                    <div className=\"no-items\">\r\n                        No items in your basket\r\n                    </div>\r\n                }\r\n                {\r\n                   basketList.length !== 0 &&\r\n                   <List>\r\n                       {basketList.map((basket, index) => <BasketItem key={index} basket={basket} />)}\r\n                   </List>\r\n                }\r\n                \r\n                <hr style={{border: \"1px dashed\", marginBottom: \"10px\"}}/>\r\n                <div className=\"sum\">\r\n                    <span style={{float: \"left\", fontWeight: \"bold\"}}>Total amount: </span>\r\n                    <span style={{float: \"right\", fontWeight: \"bold\"}}>{`$${getPizzaSum()}`}</span>\r\n                </div>\r\n                <div className=\"ActionArea\">\r\n                    <Button variant=\"contained\" color=\"secondary\" style={{width: \"100%\"}} disabled = {basketList.length === 0}>Checkout</Button>\r\n                </div>\r\n            </div>\r\n        </Paper>\r\n    );\r\n\r\n    function BasketItem(props){\r\n    \r\n        const {basket} = props;\r\n        const pizza = pizzaList.find((x) => x.key === basket.selectedPizza);\r\n        return(\r\n            <ListItem>\r\n                <IconButton aria-label=\"close\" style={{marginRight: \"10px\"}} size=\"small\" onClick={deleteBasketItem} name={props.className}>\r\n                    <CloseIcon/>\r\n                </IconButton>\r\n                <ListItemText style={{marginRight: \"10px\"}} primary={pizza.title} secondary={\r\n                    <Fragment>\r\n                        Size: {basket.selectedsizes}<br/>\r\n                        {basket.selectedtoppings.length > 0 && \r\n                        <span>Toppings: <br/>\r\n                        {basket.selectedtoppings.map((topping) => <div style={{marginLeft: \"2.5em\"}}>{topping}</div>)}</span>}\r\n                    </Fragment>\r\n                }/>\r\n                <div>{`$${pizza.price}`}</div>\r\n            </ListItem>\r\n        );\r\n    \r\n        function deleteBasketItem(){\r\n            const newList = basketList.filter(x => x !== basket);\r\n            setBasketList(newList);\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default Basket;","import { useEffect } from 'react';\nimport { useState } from 'react';\nimport './App.scss';\nimport PizzaCard from './components/Card';\nimport SelectPopup from './components/SelectPopup';\nimport Basket from './components/Basket';\nimport {PopUpSelection, BasketSelection} from './variables/stateInit';\nimport {pizzaList} from './variables/pizzaList';\n\n//Currently all pizza have the same option list\nconst OptionList = {\n  toppings: [\"Pizza Topping #1\", \"Pizza Topping #2\" ,\"Pizza Topping #3\" \n  ,\"Pizza Topping #4\" ,\"Pizza Topping #5\", \"Pizza Topping #6\", \"Pizza Topping #7\" ,\"Pizza Topping #8\" \n  ,\"Pizza Topping #9\"],\n  sizes: [\"Pizza Size #1\", \"Pizza Size #2\", \"Pizza Size #3\"]\n}\n\n\n\nfunction App() {\n  //This state controls whether the pop-up is open or closed\n  const [popupEnabled, setpopupEnabled] = useState(false);\n  //This state controls the display and input of the pop-up\n  const [popup, setPopup] = useState(PopUpSelection);\n  //This state controls the basket's inventory\n  const [basketList, setBasketList] = useState(BasketSelection);\n\n  return (\n    <div className=\"App\">\n      <SelectPopup OptionList = {OptionList} \n      popup = {popup} setPopup = {setPopup} setBasket = {setBasketList} basket = {basketList} \n      popupEnabled = {popupEnabled} setpopupEnabled={setpopupEnabled}/> \n      <div className = \"Purchase\">\n        <div className = \"CardGrid\">\n          {\n            pizzaList.map((card) => <PizzaCard key={card.key} card ={card} setpopupEnabled={setpopupEnabled}\n            popup = {popup} setPopup = {setPopup}/>)\n          }\n        </div>\n        <div className = \"Basket\">\n          <Basket setBasketList = {setBasketList} basketList = {basketList}/>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}